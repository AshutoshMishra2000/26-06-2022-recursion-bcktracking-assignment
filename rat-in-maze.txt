class Solution {
    private static List<List<Integer>> permute1(int[] arr, int index) {
        // termination case....
        if (index == arr.length - 1) {
            List<Integer> list = new ArrayList<>();
            for (int i = index; i < arr.length; i++) {
                list.add(arr[i]);
            }
            // list.add(arr[index]);
          //  System.out.println(list);
            List<List<Integer>> list1 = new ArrayList<>();
            list1.add(list);
            return list1;

        }
        // small problem
        List<List<Integer>> finalResult = new ArrayList<>();
        int singleVal = arr[index];
        List<List<Integer>> result = permute1(arr, index + 1);

        for (List<Integer> list : result) 
        {
        // System.out.println(list);
            int i = 0;
            int size = list.size();
            while (i <= size) 
            {
                List<Integer> dummy=new ArrayList<>(list);//very important line 
                dummy.add(i,singleVal);
                finalResult.add(dummy);
                i++;
            }
        }

        return finalResult;
    }

    public List<List<Integer>> permute(int[] arr) {
     return permute1(arr,0);
        
       
       
    }
}